<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

    <bean id="xmlJDBCConnection" class="com.springcore.core.xmluser.XmlJDBCConnection">
    </bean>
    <bean id="xmlUserDAO" class="com.springcore.core.xmluser.XmlUserDAO">
        <property name="xmljdbcConnection" ref="xmlJDBCConnection"/>
    </bean>
<!--Using Beans for setter dependency injection and injecting Addition Object-->
    <bean id="addition" class="com.springcore.core.xml_Compute.Addition"/>
    <bean id="(SetterMethod)addNumbers" class="com.springcore.core.xml_Compute.XMLSetter_CalculateNumbersImpl">
        <property name="division" ref="addition" />
    </bean>

    <!--Using Beans for setter dependency injection and injecting Subrtaction Object-->

    <bean id="subtraction" class="com.springcore.core.xml_Compute.Subtraction"/>
    <bean id="(SetterMethod)subtractNumbers" class="com.springcore.core.xml_Compute.XMLSetter_CalculateNumbersImpl">
        <property name="division" ref="subtraction" />
    </bean>

    <!--Using Beans for setter dependency injection and injecting Multiplication Object-->

    <bean id="multiply" class="com.springcore.core.xml_Compute.Multiplication"/>
    <bean id="(SetterMethod)multiplyNumbers" class="com.springcore.core.xml_Compute.XMLSetter_CalculateNumbersImpl">
        <property name="division" ref="multiply" />
    </bean>

    <!--Using Beans for setter dependency injection and injecting Division Object-->

    <bean id="divide" class="com.springcore.core.xml_Compute.Division" autowire="byName"/>
    <bean id="(SetterMethod)divideNumbers" class="com.springcore.core.xml_Compute.XMLSetter_CalculateNumbersImpl">
        <property name="division" ref="divide" />
    </bean>

    <!--Using Beans for Constructor dependency injection and injecting Addition Object-->


    <bean id="(Constructor)addNumbers" class="com.springcore.core.xml_Compute.XMLConstructor_CalculateNumbersImpl">
        <constructor-arg index="0" ref="addition"/>
    </bean>

    <!--Using Beans for Constructor dependency injection and injecting Subraction Object-->

    <bean id="(Constructor)SubtractNumbers" class="com.springcore.core.xml_Compute.XMLConstructor_CalculateNumbersImpl">
        <constructor-arg index="0" ref="subtraction"/>
    </bean>



    <!--Using Beans for Dependency injection  autowire by name-->

    <bean id="(AutowireByName)divideNumbers" class="com.springcore.core.xml_Compute.XMLSetter_CalculateNumbersImpl">
        <property name="division" ref="divide"/>
    </bean>

<!--    Try to inject dependency of unreachable package-->


    <bean id="ComponentjdbcConnection" class="com.springcore.components.ComponentJdbcConnection"/>
    <bean id="ComponentDAO" class="com.springcore.components.ComponentDAO">
        <property name="componentJdbcConnection" ref="ComponentjdbcConnection"/>
    </bean>

<!--    BEAN IS PROTOTYPE AND DEPENDENCY  IS SINGLETON-->

    <bean id="ComponentDAOPrototype" class="com.springcore.components.ComponentDAO" scope="prototype" >
        <property name="componentJdbcConnection" ref="ComponentjdbcConnection"  />
    </bean>

<!--    Both bean and dependency is prototype-->

    <bean id="PrototypeComponentjdbcConnection"
          class="com.springcore.components.ComponentJdbcConnection" scope="prototype" />
    <bean id="ComponentDaoAndJDBCArePrototype" class="com.springcore.components.ComponentDAO" scope="prototype">
        <property name="componentJdbcConnection" ref="PrototypeComponentjdbcConnection"/>

    </bean>

<!--    BEAN IS SINGLETON AND DEPENDENCY IS PROTOTYPE-->

    <bean id="PrototypeComponentjdbcConnectionProxyEnabled"
          class="com.springcore.components.ComponentJdbcConnection" scope="prototype">
        <aop:scoped-proxy proxy-target-class="true"/>
    </bean>

    <bean id="ComponentDaoSingleAndJDBCPrototype" class="com.springcore.components.ComponentDAO" scope="singleton">
        <property name="componentJdbcConnection" ref="PrototypeComponentjdbcConnectionProxyEnabled"/>
    </bean>

    <bean id="employee" class="com.springcore.core.javaconfig.Employee">
        <property name="employeeId" value="1111"/>
        <property name="employeeName" value="Milan"/>
    </bean>

    <bean id="employee1" class="com.springcore.core.javaconfig.Employee">
        <property name="employeeId" value="2222"/>
        <property name="employeeName" value="Rahul"/>
    </bean>

    <bean id="employeeDao" class="com.springcore.core.javaconfig.EmployeeDAO" autowire="byType"/>

    <context:component-scan base-package="com.springcore.core"/>


</beans>